@@using @(Model.ProjectNameSpace).Web.Startup
@@using @(Model.ProjectNameSpace).Authorization

<!--@(Model.EntityDescription)列表-->
<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-header">
            <div class="layui-form">
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <label class="layui-form-label">@(Model.EntityDescription)名称</label>
                        <div class="layui-input-block">
                            <input type="text" name="name" placeholder="请输入@(Model.EntityDescription)名称" autocomplete="off" class="layui-input" />
                        </div>
                    </div>
                    <div class="layui-inline">
                        <button class="layui-btn" lay-submit lay-filter="form_search">
                            <i class="layui-icon layui-icon-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="layui-card-body">
            <div class="layui-btn-container">
				@@if (await PermissionChecker.IsGrantedAsync(PermissionNames.Pages_@(Model.EntityName)_Delete))
				{
					<button class="layui-btn layui-btn-template" data-type="batchdel">删除</button>
				}
				@@if (await PermissionChecker.IsGrantedAsync(PermissionNames.Pages_@(Model.EntityName)_Create))
				{
					<button class="layui-btn layui-btn-template" data-type="add">添加</button>
				}
            </div>
            <div class="layui-row">
                <div class="layui-col-xs12">
                    <table class="layui-table"
                           lay-data="{height: 'full-180', page:true, id:'@(Model.EntityNameLower)List'}"
                           lay-filter="@(Model.EntityNameLower)List">
                        <thead>
                            <tr>
                                <th lay-data="{checkbox:true, fixed: true,width:40}"></th>
                                <th lay-data="{field:'lastModificationTime',templet:'#lastModificationTime'}">最后修改时间</th>
                                @@if (await PermissionChecker.IsGrantedAsync(PermissionNames.Pages_@(Model.EntityName)_Create_Update))
                                {
                                    <th lay-data="{align:'center',toolbar:'#@(Model.EntityNameLower)BarList'}"></th>
                                }
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@@await Html.PartialAsync("_LastModificationTime")

<!--列表按钮-->
<script type="text/html" id="@(Model.EntityNameLower)BarList">
    <div class="layui-table-cell laytable-cell-1-0-9">
        @@if (await PermissionChecker.IsGrantedAsync(PermissionNames.Pages_@(Model.EntityName)_Update))
        {
            <a class="layui-btn layui-btn-normal layui-btn-xs" lay-event="edit">编辑</a>
        }
    </div>
</script>

@@section Scripts{
    <script type="text/javascript">
        layui.config({
            base: "/lib/layui-extend-modules/"
        }).use(['jquery', 'layer', 'table', 'form'], function () {
            var $ = layui.$,
                table = layui.table,
                form = layui.form,
                layer = layui.layer;

            //监听搜索
            form.on('submit(form_search)', function (data) {
                var field = data.field;

                //执行重载
                load@(Model.EntityName)List(field);
            });

            //加载表格数据
            var config = {};  //table的参数，如搜索key
            var load@(Model.EntityName)List = function (options) {
                if (options != undefined) {
                    $.extend(config, options);
                }
                table.reload('@(Model.EntityNameLower)List', {
                    url: "@@Url.Action("Get@(Model.EntityName)List", "@(Model.EntityName)s")",
                    where: config,
                    parseData: function (res) {
                        return {
                            "code": res.result.code,
                            "msg": res.result.msg,
                            "count": res.result.count,
                            "data": res.result.data
                        };
                    },
                    response: {
                        statusCode: 200
                    }
                });
            };
            load@(Model.EntityName)List();

            //监听工具条
            table.on('tool(@(Model.EntityNameLower)List)', function (obj) {
                var data = obj.data;
                switch (obj.event) {
                    case "edit":
                        var templateData = {
                            title: '编辑@(Model.EntityDescription)信息',
                            content: "@@Url.Action("CreateOrUpdate@(Model.EntityName)", "@(Model.EntityName)s")" + abp.utils.formatString("?@(Model.EntityNameLower)Id={0}", data.id)
                        };
                        createOrUpdate(@(Model.EntityNameLower)Data);
                        break;
                }
            });

            //创建或更新
            function createOrUpdate(@(Model.EntityNameLower)Data) {
                parent.layer.open({
                    type: 2,
                    title: @(Model.EntityNameLower)Data.title,
                    content: @(Model.EntityNameLower)Data.content,
                    area: ["700px", "520px"],
                    btn: ['确定', '取消'],
                    yes: function (index, layero) {
                        parent.window['layui-layer-iframe' + index].layui.submitForm();
                    }
                });
            }

            //创建或更新完毕回调
            layui.callback = function (data) {
                parent.layer.close(data.index); //关闭弹层
                abp.notify.success(data.msg);
                load@(Model.EntityName)List();
            }

            //删除模板
            function delete@(Model.EntityName)(ids) {
                parent.layer.confirm("确认删除?", function (index) {
                    abp.ajax({
                        url: "@@Url.Action("Delete@(Model.EntityName)", "@(Model.EntityName)s")",
                        data: JSON.stringify(ids),
                        abpHandleError: false
                    }).done(function (data) {
                        if (data.code == 200) {
                            abp.notify.success(data.msg);
                            load@(Model.EntityName)List();
                        }
                    }).fail(function (jqXHR) {
                        parent.layer.msg(jqXHR.message, { icon: 5 });
                    }).always(function () {
                        parent.layer.close(index);
                    });
                });
            }

            //监听事件处理
            var active = {
                add: function () {
                    var templateData = {
                        title: '添加模板',
                        content:"@@Url.Action("CreateOrUpdate@(Model.EntityName)", "@(Model.EntityName)s")"
                    };
                    createOrUpdate(@(Model.EntityNameLower)Data);
                },
                batchdel: function () {
                    var checkStatus = table.checkStatus('@(Model.EntityNameLower)List'),
                        checkData = checkStatus.data; //得到选中的数据

                    if (checkData.length === 0) {
                        return layer.msg('请选择数据');
                    }

                    var ids = checkData.map(function (d) { return { "id": d.id }; });
                    delete@(Model.EntityName)(ids);
                }
            };

            //点击事件转发器
            $('.layui-btn.layui-btn-@(Model.EntityNameLower)').on('click', function () {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });
        });
    </script>
}