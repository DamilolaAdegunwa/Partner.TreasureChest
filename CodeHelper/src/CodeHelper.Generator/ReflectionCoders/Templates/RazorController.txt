using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Abp.Application.Services.Dto;
using Abp.AspNetCore.Mvc.Authorization;
using Microsoft.AspNetCore.Mvc;
using WuLong.Lims.Authorization;
using WuLong.Lims.Controllers;
using WuLong.Lims.CRM.@(Model.EntityName)s;
using WuLong.Lims.CRM.@(Model.EntityName)s.Dto;
using WuLong.Lims.CRM.@(Model.EntityName)s.@(Model.EntityName)Applys;
using WuLong.Lims.CRM.@(Model.EntityName)s.@(Model.EntityName)Applys.Dto;
using WuLong.Lims.Web.Areas.CRM.Models.@(Model.EntityName)s;
using WuLong.Lims.Web.Models.Common;

namespace WuLong.Lims.Web.Mvc.Areas.CRM.Controllers
{
    /// <summary>
    /// @(Model.EntityDescription)管理控制器
    /// </summary>
    [Area("CRM")]
    public class @(Model.EntityName)Controller : LimsControllerBase
    {
        #region 初始化
        private readonly I@(Model.EntityName)AppService _@(Model.EntityNameLower)AppService;

        public @(Model.EntityName)Controller(I@(Model.EntityName)AppService @(Model.EntityNameLower)AppService)
        {
            _@(Model.EntityNameLower)AppService = @(Model.EntityNameLower)AppService;
        }
        #endregion

        #region @(Model.EntityDescription)
        /// <summary>
        /// 首页
        /// </summary>
        /// <returns></returns>
        public IActionResult Index()
        {
            return View();
        }

        /// <summary>
        /// 获取@(Model.EntityDescription)数据列表
        /// </summary>
        /// <returns></returns>
        public async Task<JsonResult> Get@(Model.EntityName)List(@(Model.EntityName)PagedViewModel viewModel)
        {
            var input = ObjectMapper.Map<Get@(Model.EntityName)PagedInput>(viewModel);
            input.MaxResultCount = viewModel.Limit;
            input.SkipCount = (viewModel.Page - 1) * viewModel.Limit;

            var @(Model.EntityNameLower)ListDto = await _@(Model.EntityNameLower)AppService.GetPaged@(Model.EntityName)(input);
            return Json(new PagedResultViewModel<@(Model.EntityName)ListDto>(@(Model.EntityNameLower)ListDto.TotalCount, @(Model.EntityNameLower)ListDto.Items));
        }

        /// <summary>
        /// 新增或更新@(Model.EntityDescription)页面
        /// </summary>
        /// <returns></returns>
        public async Task<IActionResult> CreateOrUpdate@(Model.EntityName)(@(Model.EntityName)RequestModel viewModel)
        {
            var get@(Model.EntityName)ForEditOutput = await _@(Model.EntityNameLower)AppService.Get@(Model.EntityName)ForEdit(new NullableIdDto<long>(viewModel.@(Model.EntityName)Id));

            return View(get@(Model.EntityName)ForEditOutput);
        }

        /// <summary>
        /// 新增或更新@(Model.EntityDescription)
        /// </summary>
        /// <param name="input"></param>
        /// <returns></returns>
        [HttpPost]
        public async Task<JsonResult> CreateOrUpdate@(Model.EntityName)([FromBody]CreateOrUpdate@(Model.EntityName)Input input)
        {
            await _@(Model.EntityNameLower)AppService.CreateOrUpdate@(Model.EntityName)(input);
            return Json(new ResponseParamViewModel(input.@(Model.EntityName).Id.HasValue ? L("更新@(Model.EntityDescription)成功") : L("添加@(Model.EntityDescription)成功")));
        }

        /// <summary>
        /// 删除@(Model.EntityDescription)
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public async Task<JsonResult> Delete@(Model.EntityName)([FromBody]List<EntityDto<long>> input)
        {
            await _@(Model.EntityNameLower)AppService.Delete@(Model.EntityName)(input);
            return Json(new ResponseParamViewModel(L("Delete@(Model.EntityName)OK")));
        }
        #endregion
    }
}